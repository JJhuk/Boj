#include <iostream>
#include <queue>
#include <utility>
#include <tuple>

#define MAX 1000000

using namespace std;

int n;

bool check[MAX];

queue<pair<int, int>> q;
pair<int, int> temp_p;


int main(void) {
	ios::sync_with_stdio(false);
	cin.tie(0);
	cin >> n;

	q.push(make_pair(n, 0));
	while (!q.empty()) {
		temp_p = q.front();
		q.pop();
		if (temp_p.first == 1) {
			cout << temp_p.second << "\n";
			break;
		}
		if (temp_p.first >= 3 && temp_p.first % 3 == 0) {
			if (!check[temp_p.first / 3]) {
				check[temp_p.first / 3] = true;
				q.push(make_pair(temp_p.first / 3, temp_p.second + 1));
			}
		}
		if (temp_p.first >= 2 && temp_p.first % 2 == 0) {
			if (!check[temp_p.first / 2]) {
				check[temp_p.first / 2] = true;
				q.push(make_pair(temp_p.first / 2, temp_p.second + 1));
			}
		}
		if (temp_p.first - 1 >= 0) {
			if (!check[temp_p.first - 1]) {
				check[temp_p.first - 1] = true;
				q.push(make_pair(temp_p.first - 1, temp_p.second + 1));
			}
		}
	}
	return 0;
}
