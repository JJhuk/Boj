#include <iostream>
#include <queue>
#include <tuple>
#include <cstring>

#define MAP_SIZE 300

using namespace std;

int sero, garo;

int map[MAP_SIZE][MAP_SIZE];
int temp_map[MAP_SIZE][MAP_SIZE];

bool check[MAP_SIZE][MAP_SIZE];

int count_year = 0;
int count_mass = 0;

int dx[] = { 0,0,1,-1 };
int dy[] = { 1,-1,0,0 };

vector<pair<int, int>> ice;

void check_ice(int x, int y, int cnt) {
	queue<pair<int, int>> check_q;
	check_q.push(make_pair(x, y));
	check[x][y] = true;
	while (!check_q.empty()) {
		int tx, ty;
		tie(tx, ty) = check_q.front();
		check_q.pop();
		for (int i = 0; i < 4; i++) {
			int nx = tx + dx[i];
			int ny = ty + dy[i];
			if (nx >= 0 && nx < sero&&ny >= 0 && ny < garo) {	//넘어가지 않으면서
				if (map[nx][ny] == 0)
					continue;
				if (check[nx][ny])
					continue;
				check[nx][ny] = true;
				check_q.push(make_pair(nx, ny));
			}
		}

	}
}

void melt_ice() {
	memcpy(temp_map, map, sizeof(map));	//녹은 1년이 현재 녹은것에 영향을 미치면 안된다.
	while (!ice.empty()) {
		int x, y;
		tie(x, y) = ice.back();
		ice.pop_back();
		for (int i = 0; i < 4; i++) {
			int nx = x + dx[i];
			int ny = y + dy[i];
			if (nx >= 0 && nx < sero&&ny >= 0 && ny < garo) {
				if (map[nx][ny] == 0) {
					if(temp_map[x][y]>0)
						temp_map[x][y]--;	//녹는 것을 표현
				}
			}
		}
	}
	memcpy(map, temp_map, sizeof(map));	//녹고 난 결과물을 다시 원래 map에 넣어줌
}
 
int main(void) {
	ios::sync_with_stdio(false);
	cin.tie(0);
	cin >> sero >> garo;

	memset(map, -1, sizeof(map));

	bool check_all = false;	//다 0이면 false

	for (int i = 0; i < sero; i++) {
		for (int j = 0; j < garo; j++) {
			cin >> map[i][j];
			if (map[i][j] != 0) {
				check_all = true;	//전부 녹았을때를 대비
				ice.push_back(make_pair(i, j));
			}
		}
	}

	while (true) {	//한번 카운트하고 다시 얼음 위치를 넣어주어야함
		count_mass = 0;
		for (int i = 0; i < sero; i++) {	//체크함
			for (int j = 0; j < garo; j++) {
				if (!check[i][j] && map[i][j] != 0)	//방문 한 곳이 아니면
					check_ice(i, j, count_mass++);
			}
		}
		if (count_mass >= 2) {
			break;
		}

		memset(check, false, sizeof(check));	//체크는 매번해줘야죠?
		melt_ice();
		check_all = false;

		for (int i = 0; i < sero; i++) {
			for (int j = 0; j < garo; j++) {
				if (map[i][j] != 0) {
					ice.push_back(make_pair(i, j));
					check_all = true;	//전부 녹았을때 대비
				}
			}
		}
		if (!check_all) {
			break;
		}
		else
			count_year++;
	}

	if (!check_all)
		cout << 0;
	else
		cout << count_year;
	return 0;
}
