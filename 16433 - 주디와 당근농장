#include <cstring>
#include <iostream>
#include <queue>

int dx[] = { -1,-1,1,1 };
int dy[] = { -1,1,-1,1 };
int arr[101][101];
int n, r, c;
using namespace std;
int main(void)
{
	int n,r,c;
	int sum = 0;
	cin >> n >> r >> c;
	arr[r - 1][c - 1] = 1;
	queue<pair<int, int > > q;
	q.push(make_pair(r - 1, c - 1));

	while(!q.empty())
	{
		pair<int, int> now = q.front();
		q.pop();

		for(int i=0;i<4;i++)
		{
			int nx = dx[i] + now.first;
			int ny = dy[i] + now.second;
			if(nx>=0 && nx<n && ny>=0 && ny<n)
			{
				if(arr[nx][ny] == 0)
				{
					arr[nx][ny] = 1;
					q.push(make_pair(nx, ny));
					sum++;
				}
			}
		}
	}

	for(int i=0;i<n;i++)
	{
		for(int j=0;j<n;j++)
		{
			if(arr[i][j]==0)
			{
				cout << ".";
			}
			else
			{
				cout << "v";
			}
		}
		cout << "\n";
	}
}
