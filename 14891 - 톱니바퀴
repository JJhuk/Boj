#include <cstdio>
#include <deque>
#include <iostream>
#include <tuple>
#include <cmath>

#define LEFT 6
#define RIGHT 2
#define START -1
#define SCORE 0	//12시 방향

#define N 0
#define S 1
#define CLOCK 1
#define RE_CLOCK -1

using namespace std;

deque<int> gear[4];
int turn_count;
deque<pair<int, int>> v;	//몇번째 어디로
int sum_score;

void print_gear() {
	for (int i = 0; i < 4; i++) {
		printf("%d번째 기어 : ", i + 1);
		for (int j = 0; j < gear[i].size(); j++) {
			printf("%d ", gear[i][j]);
		}
		printf("\n");
	}
	printf("\n");
}

void right(int index) {
	int temp = gear[index].back();
	gear[index].pop_back();
	gear[index].push_front(temp);
}

void left(int index) {
	int temp = gear[index].front();
	gear[index].pop_front();
	gear[index].push_back(temp);
}

void turn(int index,int order,int re) {
	
	if (index - 1 >= 0 && re != RIGHT)  {
		if (gear[index - 1][RIGHT] != gear[index][LEFT])	//극이 다르면 변경! 
		{
			if (order == CLOCK)
				turn(index - 1, RE_CLOCK,LEFT);
			else
				turn(index - 1, CLOCK,LEFT);
		}
	}
	if(index + 1 <=3 && re != LEFT) {
		if (gear[index + 1][LEFT] != gear[index][RIGHT]) {
			if (order == CLOCK)
				turn(index + 1, RE_CLOCK, RIGHT);
			else
				turn(index + 1, CLOCK,RIGHT);
		}
	}
	if (order == CLOCK) {	//시계 방향일떄
		right(index);
	}
	else {	//반 시계일떄
		left(index);
	}
	return;
}

int main(void) {
	for (int i = 0; i < 4; i++) {
		for (int j = 0; j < 8; j++) {
			int a;
			scanf("%1d", &a);
			gear[i].push_back(a);
		}
	}
	scanf("%d", &turn_count);
	for (int i = 0; i < turn_count; i++) {
		int a, b;
		scanf("%d %d", &a, &b);
		v.push_back(make_pair(a - 1, b));	//인덱스 이기 때문에.. -1
	}

	for(int i=0;i<turn_count;i++) {
		int num;
		int order;
		tie(num, order) = v.front();
		v.pop_front();
		turn(num, order, START);

		//print_gear();
	}
	for (int i = 0; i < 4; i++)
		if (gear[i][0] == S)
			sum_score += pow(2, i);

	printf("%d\n", sum_score);
	return 0;
}
