#include <iostream>

using namespace std;

#define DOMINO_COUNT 19
#define POS 4

int domino[DOMINO_COUNT][POS][2]{
{{0,0},{0,1},{0,2},{0,3}},	//긴막대기 가로
{{0,0},{1,0},{2,0},{3,0}},	//긴막대기 세로

{{0,0},{1,0},{0,1},{1,1}},	//네모

{{0,0},{1,0},{0,1},{0,2}},		//왼손 ㄴ 기준부터 시계방향
{{0,0},{0,-1},{1,0},{2,0}},
{{0,0},{-1,0},{0,-1},{0,-2}},
{{0,0},{-1,0},{-2,0},{0,1}},	
{{0,0},{-1,0},{0,1},{0,2}},	//오른손 ㄴ 기준부터 
{{0,0},{0,1},{1,0},{2,0}},
{{0,0},{1,0},{0,-1},{0,-2}},
{{0,0},{0,-1},{-1,0},{-2,0}},

{{0,0},{0,1},{1,0},{1,-1}},	//초록색
{{0,0},{1,0},{0,-1},{-1,-1}},
{{0,0},{-1,0},{0,-1},{1,-1}},
{{0,0},{0,1},{-1,0},{-1,-1}},

{{0,0},{1,0},{-1,0},{0,-1}},	//분홍색 ㅗ
{{0,0},{1,0},{-1,0},{0,1}},
{{0,0},{1,0},{0,-1},{0,1}},
{{0,0},{-1,0},{0,1},{0,-1}}
};

int n, m;

int map[500][500] = { 0 };
int max_sum = 0;

int main(void) {
	ios::sync_with_stdio(false);

	cin >> n >> m;
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			cin >> map[i][j];
		}
	}

	for (int i = 0; i < DOMINO_COUNT; i++) {		//블럭 종류
		for (int i2 = 0; i2 < n; i2++) {		//맵 
			for (int j2 = 0; j2 < m; j2++) {
				int count_pos = 0;
				int sum = 0;
				for (int j = 0; j < POS; j++) {	//좌표
						
					int x = i2+domino[i][j][0];
					int y = j2+domino[i][j][1];
					
					if (x >= 0 && x < n&&y >= 0 && y < m) {	//좌표가 괜찮으면?
						count_pos++;
						sum += map[x][y];
					}
					else {	//걍 바로 종료
						break;
					}
					if (count_pos == 4)	//카운트가 4개되면 맥스값 갱신. 좌표는 4개있으니.
					{
						max_sum = max_sum < sum ? sum : max_sum;
					}
				}
			}
		}
	}
	cout << max_sum;

	system("pause");
	return 0;
}
